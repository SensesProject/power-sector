{"remainingRequest":"/Users/francescamorini/projects/power-sector/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/power-sector/src/components/SecondaryEnergy.vue?vue&type=style&index=0&id=8ca7f5c8&scoped=true&lang=scss&","dependencies":[{"path":"/Users/francescamorini/projects/power-sector/src/components/SecondaryEnergy.vue","mtime":1585229993995},{"path":"/Users/francescamorini/projects/power-sector/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCkBpbXBvcnQgImxpYnJhcnkvc3JjL3N0eWxlL3ZhcmlhYmxlcy5zY3NzIjsKCi5zZWNvbmRhcnktZW5lcmd5IHsKICBoZWlnaHQ6IDg1dmg7CgogIC5rZXkgewogICAgd2lkdGg6IDkwJTsKICAgIGhlaWdodDogMTAwcHg7CiAgICBtYXJnaW46IDAgYXV0bzsKICAgIHBhZGRpbmc6IDAgMjBweDsKICAgIGJvcmRlci1ib3R0b206MC41cHggc29saWQgYmx1ZTsKICB9CgogIHN2ZyB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7CiAgfQp9Cgo="},{"version":3,"sources":["SecondaryEnergy.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SecondaryEnergy.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"secondary-energy\" ref=\"inWrapper\">\n    <div class=\"key\">\n      Legend or selectors if any\n    </div>\n    <svg :width=\"innerWidth\" :height=\"innerHeight\" :transform=\"`translate(${margin.left}, 0)`\">\n    </svg>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RiskPathway',\n  props: {\n    width: {\n      type: Number,\n      default: 0\n    },\n    height: {\n      type: Number,\n      default: 0\n    }\n  },\n  data () {\n    return {\n      margin: {\n        top: 10,\n        bottom: 10,\n        right: 10,\n        left: 10\n      },\n      innerHeight: 0\n    }\n  },\n  computed: {\n    innerWidth () {\n      return this.width - (this.margin.left + this.margin.right)\n    }\n  },\n  methods: {\n    calcSizes () {\n      const { inWrapper: el } = this.$refs\n      const innerHeight = el.clientHeight || el.parentNode.clientHeight\n      this.innerHeight = Math.max(innerHeight, 500)\n    }\n  },\n  mounted () {\n    this.calcSizes()\n    window.addEventListener('resize', this.calcSizes, false)\n  },\n  updated () {\n    this.calcSizes()\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.calcSizes, false)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n@import \"library/src/style/variables.scss\";\n\n.secondary-energy {\n  height: 85vh;\n\n  .key {\n    width: 90%;\n    height: 100px;\n    margin: 0 auto;\n    padding: 0 20px;\n    border-bottom:0.5px solid blue;\n  }\n\n  svg {\n    background-color: lightblue;\n  }\n}\n\n</style>\n"]}]}