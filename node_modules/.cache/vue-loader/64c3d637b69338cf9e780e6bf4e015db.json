{"remainingRequest":"/Users/francescamorini/projects/power-sector/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/francescamorini/projects/power-sector/src/components/SecondaryEnergy.vue?vue&type=style&index=0&id=8ca7f5c8&scoped=true&lang=scss&","dependencies":[{"path":"/Users/francescamorini/projects/power-sector/src/components/SecondaryEnergy.vue","mtime":1586356615827},{"path":"/Users/francescamorini/projects/power-sector/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/francescamorini/projects/power-sector/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0ICJsaWJyYXJ5L3NyYy9zdHlsZS92YXJpYWJsZXMuc2NzcyI7Cgouc2Vjb25kYXJ5LWVuZXJneSB7CiAgaGVpZ2h0OiA4NXZoOwoKICAua2V5IHsKICAgIHdpZHRoOiA5MCU7CiAgICBoZWlnaHQ6IDEwMHB4OwogICAgbWFyZ2luOiAwIGF1dG87CiAgICBwYWRkaW5nOiAwIDIwcHg7CiAgICBib3JkZXItYm90dG9tOjAuNXB4IHNvbGlkIGJsdWU7CiAgfQoKICBzdmcgewogICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlOwoKICAgIGNpcmNsZSB7CiAgICAgIGZpbGw6IG5vbmU7CiAgICAgIHN0cm9rZTogcmVkOwogICAgfQogICAgLkNvYWwgewogICAgICBmaWxsOiBncmV5OwogICAgICBzdHJva2U6IHJlZDsKICAgIH0KICB9Cn0KCg=="},{"version":3,"sources":["SecondaryEnergy.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SecondaryEnergy.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"secondary-energy\" ref=\"inWrapper\">\n    <div class=\"key\" :data='logSome'>\n      Legend or selectors if any\n    </div>\n    <div></div>\n    <svg :width=\"innerWidth\" :height=\"innerHeight\" :transform=\"`translate(${margin.left}, 0)`\">\n      <g v-for=\"(group, g) in dots\" v-bind:key=\"g + 'group'\" :class=\"labels[g]\">\n        <circle v-for=\"(dot, d) in group\" v-bind:key=\"d + 'dot'\" :class=\"labels[g]\" :cx=\"dot.year\" cy=\"150\" :r=\"dot.value\"/>\n      </g>\n    </svg>\n  </div>\n</template>\n\n<script>\nimport SecondaryEnergy from 'dsv-loader!@/assets/data/SecondaryEnergy.csv' // eslint-disable-line import/no-webpack-loader-syntax\nimport _ from 'lodash'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'RiskPathway',\n  props: {\n    width: {\n      type: Number,\n      default: 0\n    },\n    height: {\n      type: Number,\n      default: 0\n    }\n  },\n  // Using VUE to declare data and load them in the component\n  data () {\n    return {\n      SecondaryEnergy,\n      energy: _.groupBy(SecondaryEnergy, d => d.Variable),\n      labels: [...new Set(SecondaryEnergy.map(r => r.Variable))],\n      currentScenario: 'NPi2020_1000_v3',\n      currentRegion: 'World',\n      margin: {\n        top: 10,\n        bottom: 10,\n        right: 10,\n        left: 10\n      },\n      innerHeight: 0\n    }\n  },\n  computed: {\n    innerWidth () {\n      return this.width - (this.margin.left + this.margin.right)\n    },\n    scenarioFilter () { return _.map(this.energy, (sc, s) => _.filter(sc, d => d.Scenario === this.currentScenario)) },\n    regionFilter () { return _.map(this.scenarioFilter, (re, r) => _.filter(re, d => d.Region === this.currentRegion)) },\n    scale () {\n      return {\n        x: d3.scaleLinear()\n          .range([0, 800])\n          .domain([2020, 2100])\n      }\n    },\n    dots () {\n      return _.map(this.regionFilter, (energy, e) => {\n        return _.map(energy, (single, s) => {\n          console.log(this.scale.x(single.Year), single.Value)\n          return {\n            year: this.scale.x(single.Year),\n            value: single.Value\n          }\n        })\n      })\n    },\n    logSome () {\n      // console.log('dots', this.dots)\n      // console.log('grouped', this.energy)\n      // console.log(this.SecondaryEnergy)\n      return 0\n    }\n  },\n  methods: {\n    calcSizes () {\n      const { inWrapper: el } = this.$refs\n      const innerHeight = el.clientHeight || el.parentNode.clientHeight\n      this.innerHeight = Math.max(innerHeight, 500)\n    }\n  },\n  mounted () {\n    this.calcSizes()\n    window.addEventListener('resize', this.calcSizes, false)\n  },\n  updated () {\n    this.calcSizes()\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.calcSizes, false)\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped lang=\"scss\">\n@import \"library/src/style/variables.scss\";\n\n.secondary-energy {\n  height: 85vh;\n\n  .key {\n    width: 90%;\n    height: 100px;\n    margin: 0 auto;\n    padding: 0 20px;\n    border-bottom:0.5px solid blue;\n  }\n\n  svg {\n    background-color: lightblue;\n\n    circle {\n      fill: none;\n      stroke: red;\n    }\n    .Coal {\n      fill: grey;\n      stroke: red;\n    }\n  }\n}\n\n</style>\n"]}]}